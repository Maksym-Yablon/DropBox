import pygame
from sys import exit
import time  # –Ü–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —á–∞—Å–æ–º

# —ñ–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—ñ–≤ –≥—Ä–∏ –∑ –ø–∞–ø–∫–∏ DROPBOX
from constants import*  # –Ü–º–ø–æ—Ä—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç
import grid
import piece
import ui
from menu import Menu
from records import records_manager  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä —Ä–µ–∫–æ—Ä–¥—ñ–≤
#-------------------

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Pygame
pygame.init()
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
clock = pygame.time.Clock()
pygame.display.set_caption("Drop Box")
pygame.display.set_icon(pygame.image.load("image/icon.png"))

# –î–æ–¥–∞—î–º–æ —à—Ä–∏—Ñ—Ç–∏
score_font = pygame.font.SysFont("Arial", 36, bold=True)
record_font = pygame.font.SysFont("Arial", 24, bold=True)

# –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç–∏
import grid as grid_module
grid = grid_module.Grid() # —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ

menu = Menu(screen, clock, SCREEN_WIDTH, SCREEN_HEIGHT, BACKGROUND_IMAGE)

# –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞—Å—Ç–∞–≤–∫—É —Ç–∞ –º–µ–Ω—é
menu.show_splash_screen()
menu.main_menu()  # –ó–∞–ø—É—Å–∫–∞—î–º–æ –º–µ–Ω—é —ñ —á–µ–∫–∞—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ì—Ä–∞—Ç–∏"



# –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª –≥—Ä–∏ (–∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ì—Ä–∞—Ç–∏")
running = True
dragging = False
dragged_piece = None
dragged_piece_index = None  # –Ü–Ω–¥–µ–∫—Å —Ñ—ñ–≥—É—Ä–∏ –≤ –∫–æ—Ä–æ–±—Ü—ñ

def get_piece_at_mouse(mouse_pos):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∫–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ —Ñ—ñ–≥—É—Ä—É –≤ –∫–æ—Ä–æ–±—Ü—ñ"""
    return piece_box.get_piece_at_mouse(mouse_pos[0], mouse_pos[1])

def replace_used_piece(piece_index):
    """–ó–∞–º—ñ–Ω—é—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—É —Ñ—ñ–≥—É—Ä—É –Ω–∞ –Ω–æ–≤—É –≤–∏–ø–∞–¥–∫–æ–≤—É"""
    piece_box.replace_piece(piece_index)

# –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–æ–±–∫—É –¥–ª—è —Ñ—ñ–≥—É—Ä (—Ä–æ–∑–º—ñ—â–µ–Ω–∞ –ø—Ä–∞–≤–æ—Ä—É—á –≤—ñ–¥ —Å—ñ—Ç–∫–∏)
from piece import PieceBox
piece_box = PieceBox(1000, 100)

def show_game_over_screen():
    """–ü–æ–∫–∞–∑—É—î –µ–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≥—Ä–∏ –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏"""
    final_score = grid.score
    
    # –î–æ–¥–∞—î–º–æ —Ä–µ–∫–æ—Ä–¥
    is_new_record = records_manager.add_record(final_score)
    
    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –≥—Ä–∞–≤—Ü—è –≤ –∫–æ–Ω—Å–æ–ª—å
    if is_new_record:
        print(f"üéâ –ù–û–í–ò–ô –†–ï–ö–û–†–î! –û—á–∫–∏: {final_score}")
        position = records_manager.get_player_position(final_score)
        if position:
            print(f"–í–∞—à–∞ –ø–æ–∑–∏—Ü—ñ—è: {position} –º—ñ—Å—Ü–µ")
    else:
        print(f"–ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—á–∫–∏: {final_score}")
        best_score = records_manager.get_best_score()
        print(f"–ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {best_score}")
    
    # –ï–∫—Ä–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    while True:
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∫–Ω–æ–ø–∫–∏
        try_again_button = pygame.Rect(SCREEN_WIDTH // 2 - 150, 350, 300, 60)
        menu_button = pygame.Rect(SCREEN_WIDTH // 2 - 100, 430, 200, 60)
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                return "quit"
            elif event.type == pygame.MOUSEBUTTONDOWN:
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
                if try_again_button.collidepoint(event.pos):
                    return "restart"
                elif menu_button.collidepoint(event.pos):
                    return "menu"
            elif event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    return "restart"
                elif event.key == pygame.K_ESCAPE:
                    return "menu"
        
        # –ú–∞–ª—é—î–º–æ –µ–∫—Ä–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
        screen.fill(CARROT)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_font = pygame.font.SysFont("Arial", 48, bold=True)
        if is_new_record:
            title_text = title_font.render("üéâ –ù–û–í–ò–ô –†–ï–ö–û–†–î!", True, (255, 0, 0))
        else:
            title_text = title_font.render("–ì–†–ê –ó–ê–í–ï–†–®–ï–ù–ê", True, BLACK)
        title_rect = title_text.get_rect(center=(SCREEN_WIDTH // 2, 150))
        screen.blit(title_text, title_rect)
        
        # –û—á–∫–∏
        score_display_font = pygame.font.SysFont("Arial", 36, bold=True)
        score_display_text = score_display_font.render(f"–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {final_score} –æ—á–æ–∫", True, BLACK)
        score_display_rect = score_display_text.get_rect(center=(SCREEN_WIDTH // 2, 220))
        screen.blit(score_display_text, score_display_rect)
        
        # –ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        best_score = records_manager.get_best_score()
        best_score_text = record_font.render(f"–ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {best_score}", True, (100, 0, 0))
        best_score_rect = best_score_text.get_rect(center=(SCREEN_WIDTH // 2, 260))
        screen.blit(best_score_text, best_score_rect)
        
        # –ö–Ω–æ–ø–∫–∏
        button_font = pygame.font.SysFont("Arial", 32, bold=True)
        
        # –ú–∞–ª—é—î–º–æ –∫–Ω–æ–ø–∫—É "–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑"
        pygame.draw.rect(screen, GREEN, try_again_button)
        try_again_text = button_font.render("–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑", True, BLACK)
        try_again_text_rect = try_again_text.get_rect(center=try_again_button.center)
        screen.blit(try_again_text, try_again_text_rect)
        
        # –ú–∞–ª—é—î–º–æ –∫–Ω–æ–ø–∫—É "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"
        pygame.draw.rect(screen, LIGHTBLUE, menu_button)
        menu_text = button_font.render("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", True, BLACK)
        menu_text_rect = menu_text.get_rect(center=menu_button.center)
        screen.blit(menu_text, menu_text_rect)
        
        # –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
        instruction_font = pygame.font.SysFont("Arial", 20)
        instruction1 = instruction_font.render("–ü–†–û–ë–Ü–õ - –≥—Ä–∞—Ç–∏ –∑–Ω–æ–≤—É, ESC - –º–µ–Ω—é", True, (100, 100, 100))
        instruction1_rect = instruction1.get_rect(center=(SCREEN_WIDTH // 2, 550))
        screen.blit(instruction1, instruction1_rect)
        
        pygame.display.flip()
        clock.tick(60)

def game_over():
    """–û–±—Ä–æ–±–ª—è—î –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≥—Ä–∏ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∫–æ—Ä–¥—É"""
    final_score = grid.score
    
    # –î–æ–¥–∞—î–º–æ —Ä–µ–∫–æ—Ä–¥
    is_new_record = records_manager.add_record(final_score)
    
    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –≥—Ä–∞–≤—Ü—è
    if is_new_record:
        print(f"üéâ –ù–û–í–ò–ô –†–ï–ö–û–†–î! –û—á–∫–∏: {final_score}")
        position = records_manager.get_player_position(final_score)
        if position:
            print(f"–í–∞—à–∞ –ø–æ–∑–∏—Ü—ñ—è: {position} –º—ñ—Å—Ü–µ")
    else:
        print(f"–ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—á–∫–∏: {final_score}")
        best_score = records_manager.get_best_score()
        print(f"–ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {best_score}")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ —Ç–æ–ø-5 —Ä–µ–∫–æ—Ä–¥—ñ–≤
    print("\nüèÜ –¢–û–ü-5 –†–ï–ö–û–†–î–Ü–í:")
    top_records = records_manager.get_top_records(5)
    for i, record in enumerate(top_records, 1):
        print(f"{i}. {record['score']} –æ—á–æ–∫ - {record['player']} ({record['date']})")

def check_game_over():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –º–æ–∂–Ω–∞ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Ö–æ—á–∞ –± –æ–¥–Ω—É —Ñ—ñ–≥—É—Ä—É"""
    for piece in piece_box.pieces:
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ –º–æ–∂–ª–∏–≤—ñ –ø–æ–∑–∏—Ü—ñ—ó –Ω–∞ —Å—ñ—Ç—Ü—ñ
        for row in range(8):
            for col in range(8):
                if grid.can_place_piece(piece, col, row):
                    return False  # –Ñ —Ö–æ—á–∞ –± –æ–¥–Ω–∞ –º–æ–∂–ª–∏–≤–∞ –ø–æ–∑–∏—Ü—ñ—è
    return True  # –ù–µ–º–∞—î –∂–æ–¥–Ω–æ—ó –º–æ–∂–ª–∏–≤–æ—ó –ø–æ–∑–∏—Ü—ñ—ó

def reset_game():
    """–°–∫–∏–¥–∞—î –≥—Ä—É –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É"""
    global grid, piece_box, dragging, dragged_piece, dragged_piece_index
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —Å—ñ—Ç–∫—É
    grid = grid_module.Grid()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É –∫–æ—Ä–æ–±–∫—É –∑ —Ñ—ñ–≥—É—Ä–∞–º–∏
    piece_box = PieceBox(1000, 100)
    
    # –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
    dragging = False
    dragged_piece = None
    dragged_piece_index = None
    
    print("–ì—Ä—É —Å–∫–∏–Ω—É—Ç–æ! –ù–æ–≤–∞ –≥—Ä–∞ –ø–æ—á–∞–ª–∞—Å—è.")

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            
        elif event.type == pygame.MOUSEBUTTONDOWN:
            # –ü–æ—á–∞—Ç–∏ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
            mouse_pos = pygame.mouse.get_pos()
            clicked_piece_index = get_piece_at_mouse(mouse_pos)
            if clicked_piece_index is not None:
                dragging = True
                dragged_piece = piece_box.pieces[clicked_piece_index]
                dragged_piece_index = clicked_piece_index
                print(f"–ü–æ—á–∞–ª–∏ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞—Ç–∏ —Ñ—ñ–≥—É—Ä—É {clicked_piece_index} –∑ –ø–æ–∑–∏—Ü—ñ—ó: {mouse_pos}")
            
        elif event.type == pygame.MOUSEBUTTONUP:
            # –ó–∞–∫—ñ–Ω—á–∏—Ç–∏ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
            if dragging and dragged_piece:
                mouse_pos = pygame.mouse.get_pos()
                grid_x, grid_y = grid.mouse_to_grid(mouse_pos[0], mouse_pos[1])
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–æ–∂–Ω–∞ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Ñ—ñ–≥—É—Ä—É
                if grid.can_place_piece(dragged_piece, grid_x, grid_y):
                    # –†–æ–∑–º—ñ—â—É—î–º–æ —Ñ—ñ–≥—É—Ä—É –Ω–∞ —Å—ñ—Ç—Ü—ñ
                    grid.place_piece(dragged_piece, grid_x, grid_y)
                    grid.clear_lines()  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—è –ª—ñ–Ω—ñ–π
                    
                    # –ó–∞–º—ñ–Ω—é—î–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—É —Ñ—ñ–≥—É—Ä—É –Ω–∞ –Ω–æ–≤—É
                    replace_used_piece(dragged_piece_index)
                    
                    print(f"–§—ñ–≥—É—Ä—É —Ä–æ–∑–º—ñ—â–µ–Ω–æ –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó ({grid_x}, {grid_y})")
                else:
                    print(f"–ù–µ–º–æ–∂–ª–∏–≤–æ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Ñ—ñ–≥—É—Ä—É –Ω–∞ –ø–æ–∑–∏—Ü—ñ—ó ({grid_x}, {grid_y})")
            dragging = False
            dragged_piece = None
            dragged_piece_index = None
            
        elif event.type == pygame.MOUSEMOTION:
            if dragging:
                mouse_pos = pygame.mouse.get_pos()
                # –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—ñ–¥ –º–∏—à–µ—é
            
    # –∫–æ–¥ –≥—Ä–∏
    screen.fill(CARROT)
    grid.draw(screen)  # –º–∞–ª—é—î–º–æ —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ

    # –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –æ—á–∫–∏ —É –≤–µ—Ä—Ö–Ω—å–æ–º—É –ª—ñ–≤–æ–º—É –∫—É—Ç—ñ
    score_text = score_font.render(f"–û—á–∫–∏: {grid.score}", True, (0, 0, 0))
    screen.blit(score_text, (30, 30))
    
    # –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –Ω–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∫–æ—Ä–¥
    best_score = records_manager.get_best_score()
    record_text = record_font.render(f"–†–µ–∫–æ—Ä–¥: {best_score}", True, (100, 0, 0))
    screen.blit(record_text, (30, 80))

    # –ü—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
    if dragging and dragged_piece:
        mouse_x, mouse_y = pygame.mouse.get_pos()
        grid_x, grid_y = grid.mouse_to_grid(mouse_x, mouse_y)
        valid = grid.can_place_piece(dragged_piece, grid_x, grid_y)
        grid.highlight_position(screen, grid_x, grid_y, dragged_piece, valid=valid)

    # –ú–∞–ª—é—î–º–æ –∫–æ—Ä–æ–±–∫—É –∑ —Ñ—ñ–≥—É—Ä–∞–º–∏ (–∫—Ä—ñ–º —Ç–æ—ó, —â–æ –ø–µ—Ä–µ—Ç—è–≥—É—î—Ç—å—Å—è)
    piece_box.draw(screen, dragged_piece_index if dragging else None)
    
    # –î–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è: –º–∞–ª—é—î–º–æ —Ä–∞–º–∫—É –∫–æ—Ä–æ–±–∫–∏
    piece_box.draw_box_outline(screen)

    # –Ø–∫—â–æ –ø–µ—Ä–µ—Ç—è–≥—É—î–º–æ —Ñ—ñ–≥—É—Ä—É - –º–∞–ª—é—î–º–æ —ó—ó –ø—ñ–¥ –º–∏—à–µ—é
    if dragging and dragged_piece:
        mouse_x, mouse_y = pygame.mouse.get_pos()
        dragged_piece.draw(screen, mouse_x - 24, mouse_y - 24, 48)


    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—ñ–Ω–µ—Ü—å –≥—Ä–∏
    if check_game_over():
        result = show_game_over_screen()
        if result == "restart":
            reset_game()
        elif result == "menu":
            # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –º–µ–Ω—é
            menu.main_menu()
            reset_game()
        elif result == "quit":
            running = False
    
    pygame.display.flip() # –û–Ω–æ–≤–ª—é—î–º–æ –µ–∫—Ä–∞–Ω
    clock.tick(60) # FPS –≤ –≥—Ä—ñ
pygame.quit()
exit()