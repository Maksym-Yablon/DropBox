import pygame
from sys import exit
import time

# –Ü–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—ñ–≤ –≥—Ä–∏
from constants import *
import grid as grid_module
import piece
from piece import PieceBox
import ui
from ui import ui_effects, GameOverScreen, GameUI, MenuSystem
from records import records_manager

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Pygame
pygame.init()
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
clock = pygame.time.Clock()
pygame.display.set_caption("Drop Box")
pygame.display.set_icon(pygame.image.load("image/icon.png"))

# –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç–∏ UI
grid = grid_module.Grid()  # –Ü–≥—Ä–æ–≤–µ –ø–æ–ª–µ
game_over_screen = GameOverScreen(screen, clock)
game_ui = GameUI(screen)
menu_system = MenuSystem(screen, clock)

# –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞—Å—Ç–∞–≤–∫—É —Ç–∞ –º–µ–Ω—é
menu_system.main_menu_loop(records_manager, BACKGROUND_IMAGE)


# –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª –≥—Ä–∏ (–∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ì—Ä–∞—Ç–∏")
running = True
dragging = False
dragged_piece = None
dragged_piece_index = None  # –Ü–Ω–¥–µ–∫—Å —Ñ—ñ–≥—É—Ä–∏ –≤ –∫–æ—Ä–æ–±—Ü—ñ
drag_offset_x = 0  # –ó–º—ñ—â–µ–Ω–Ω—è –∫–ª—ñ–∫—É –ø–æ X –≤—ñ–¥–Ω–æ—Å–Ω–æ —Ñ—ñ–≥—É—Ä–∏
drag_offset_y = 0  # –ó–º—ñ—â–µ–Ω–Ω—è –∫–ª—ñ–∫—É –ø–æ Y –≤—ñ–¥–Ω–æ—Å–Ω–æ —Ñ—ñ–≥—É—Ä–∏
drag_block_col = 0  # –ö–æ–ª–æ–Ω–∫–∞ –±–ª–æ–∫—É –≤ —Ñ—ñ–≥—É—Ä—ñ, –∑–∞ —è–∫—É –≤–∑—è–ª–∏—Å—è
drag_block_row = 0  # –†—è–¥–æ–∫ –±–ª–æ–∫—É –≤ —Ñ—ñ–≥—É—Ä—ñ, –∑–∞ —è–∫—É –≤–∑—è–ª–∏—Å—è


def get_piece_at_mouse(mouse_pos):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∫–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ —Ñ—ñ–≥—É—Ä—É –≤ –∫–æ—Ä–æ–±—Ü—ñ"""
    return piece_box.get_piece_at_mouse(mouse_pos[0], mouse_pos[1])


def replace_used_piece(piece_index):
    """–ó–∞–º—ñ–Ω—é—î –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—É —Ñ—ñ–≥—É—Ä—É –Ω–∞ –Ω–æ–≤—É –≤–∏–ø–∞–¥–∫–æ–≤—É"""
    piece_box.replace_piece(piece_index)


# –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–æ–±–∫—É –¥–ª—è —Ñ—ñ–≥—É—Ä (—Ä–æ–∑–º—ñ—â–µ–Ω–∞ –ø—Ä–∞–≤–æ—Ä—É—á –≤—ñ–¥ —Å—ñ—Ç–∫–∏)
piece_box = PieceBox(1000, 100)

def show_game_over_screen():
    """–ü–æ–∫–∞–∑—É—î –µ–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≥—Ä–∏ –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏"""
    return game_over_screen.show(grid.score, records_manager)

def game_over():
    """–û–±—Ä–æ–±–ª—è—î –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≥—Ä–∏ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∫–æ—Ä–¥—É"""
    final_score = grid.score
    
    # –î–æ–¥–∞—î–º–æ —Ä–µ–∫–æ—Ä–¥
    is_new_record = records_manager.add_record(final_score)
    
    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –≥—Ä–∞–≤—Ü—è
    if is_new_record:
        print(f"üéâ –ù–û–í–ò–ô –†–ï–ö–û–†–î! –û—á–∫–∏: {final_score}")
        position = records_manager.get_player_position(final_score)
        if position:
            print(f"–í–∞—à–∞ –ø–æ–∑–∏—Ü—ñ—è: {position} –º—ñ—Å—Ü–µ")
    else:
        print(f"–ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—á–∫–∏: {final_score}")
        best_score = records_manager.get_best_score()
        print(f"–ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {best_score}")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ —Ç–æ–ø-5 —Ä–µ–∫–æ—Ä–¥—ñ–≤
    print("\nüèÜ –¢–û–ü-5 –†–ï–ö–û–†–î–Ü–í:")
    top_records = records_manager.get_top_records(5)
    for i, record in enumerate(top_records, 1):
        print(f"{i}. {record['score']} –æ—á–æ–∫ - {record['player']} ({record['date']})")

def check_game_over():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –º–æ–∂–Ω–∞ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Ö–æ—á–∞ –± –æ–¥–Ω—É —Ñ—ñ–≥—É—Ä—É"""
    for piece in piece_box.pieces:
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ –º–æ–∂–ª–∏–≤—ñ –ø–æ–∑–∏—Ü—ñ—ó –Ω–∞ —Å—ñ—Ç—Ü—ñ
        for row in range(8):
            for col in range(8):
                if grid.can_place_piece(piece, col, row):
                    return False  # –Ñ —Ö–æ—á–∞ –± –æ–¥–Ω–∞ –º–æ–∂–ª–∏–≤–∞ –ø–æ–∑–∏—Ü—ñ—è
    return True  # –ù–µ–º–∞—î –∂–æ–¥–Ω–æ—ó –º–æ–∂–ª–∏–≤–æ—ó –ø–æ–∑–∏—Ü—ñ—ó

def reset_game():
    """–°–∫–∏–¥–∞—î –≥—Ä—É –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É"""
    global grid, piece_box, dragging, dragged_piece, dragged_piece_index, drag_offset_x, drag_offset_y, drag_block_col, drag_block_row
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —Å—ñ—Ç–∫—É
    grid = grid_module.Grid()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É –∫–æ—Ä–æ–±–∫—É –∑ —Ñ—ñ–≥—É—Ä–∞–º–∏
    piece_box = PieceBox(1000, 100)
    
    # –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
    dragging = False
    dragged_piece = None
    dragged_piece_index = None
    drag_offset_x = 0
    drag_offset_y = 0
    drag_block_col = 0
    drag_block_row = 0

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            
        elif event.type == pygame.MOUSEBUTTONDOWN:
            # –ü–æ—á–∞—Ç–∏ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
            mouse_pos = pygame.mouse.get_pos()
            clicked_piece_index, offset_x, offset_y = get_piece_at_mouse(mouse_pos)
            if clicked_piece_index is not None:
                # –¢–∞–∫–æ–∂ –≤–∏–∑–Ω–∞—á–∞—î–º–æ, –∑–∞ —è–∫–∏–π –±–ª–æ–∫ —Ñ—ñ–≥—É—Ä–∏ –≤–∑—è–ª–∏—Å—è
                piece_index, block_col, block_row = piece_box.get_block_position_in_piece(mouse_pos[0], mouse_pos[1])
                
                dragging = True
                dragged_piece = piece_box.pieces[clicked_piece_index]
                dragged_piece_index = clicked_piece_index
                drag_offset_x = offset_x
                drag_offset_y = offset_y
                drag_block_col = block_col if block_col is not None else 0
                drag_block_row = block_row if block_row is not None else 0
            
        elif event.type == pygame.MOUSEBUTTONUP:
            # –ó–∞–∫—ñ–Ω—á–∏—Ç–∏ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
            if dragging and dragged_piece:
                mouse_pos = pygame.mouse.get_pos()
                grid_x, grid_y = grid.mouse_to_grid(mouse_pos[0], mouse_pos[1])
                
                # –ö–æ—Ä–µ–≥—É—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ç–æ–≥–æ, –∑–∞ —è–∫–∏–π –±–ª–æ–∫ —Ñ—ñ–≥—É—Ä–∏ –≤–∑—è–ª–∏—Å—è
                target_grid_x = grid_x - drag_block_col
                target_grid_y = grid_y - drag_block_row
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–æ–∂–Ω–∞ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Ñ—ñ–≥—É—Ä—É
                if grid.can_place_piece(dragged_piece, target_grid_x, target_grid_y):
                    # –†–æ–∑–º—ñ—â—É—î–º–æ —Ñ—ñ–≥—É—Ä—É –Ω–∞ —Å—ñ—Ç—Ü—ñ
                    grid.place_piece(dragged_piece, target_grid_x, target_grid_y)
                    grid.clear_lines()  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—è –ª—ñ–Ω—ñ–π
                    
                    # –ó–∞–º—ñ–Ω—é—î–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—É —Ñ—ñ–≥—É—Ä—É –Ω–∞ –Ω–æ–≤—É
                    replace_used_piece(dragged_piece_index)
                else:
                    print("‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Ñ—ñ–≥—É—Ä—É —Ç—É—Ç")
            dragging = False
            dragged_piece = None
            dragged_piece_index = None
            drag_offset_x = 0
            drag_offset_y = 0
            drag_block_col = 0
            drag_block_row = 0
            
        elif event.type == pygame.MOUSEMOTION:
            if dragging:
                mouse_pos = pygame.mouse.get_pos()
                # –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—ñ–¥ –º–∏—à–µ—é
        
        elif event.type == pygame.KEYDOWN:
            # –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
            if event.key == pygame.K_r:  # R - —Å–∫–∏–¥–∞–Ω–Ω—è —Å—ñ—Ç–∫–∏
                for row in range(8):
                    for col in range(8):
                        grid.cells[row][col] = None
                grid.score = 0
            elif event.key == pygame.K_n:  # N - –ù–æ–≤–∞ –≥—Ä–∞
                reset_game()
            
    # –∫–æ–¥ –≥—Ä–∏
    screen.fill(BACKGROUND_COLOR)
    grid.draw(screen)  # –º–∞–ª—é—î–º–æ —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ

    # –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ HUD (–æ—á–∫–∏ —Ç–∞ —Ä–µ–∫–æ—Ä–¥)
    best_score = records_manager.get_best_score()
    game_ui.draw_hud(grid.score, best_score)

    # –ü—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è –∑ –Ω–æ–≤–∏–º–∏ –µ—Ñ–µ–∫—Ç–∞–º–∏
    if dragging and dragged_piece:
        mouse_x, mouse_y = pygame.mouse.get_pos()
        grid_x, grid_y = grid.mouse_to_grid(mouse_x, mouse_y)
        
        # –ö–æ—Ä–µ–≥—É—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ç–æ–≥–æ, –∑–∞ —è–∫–∏–π –±–ª–æ–∫ —Ñ—ñ–≥—É—Ä–∏ –≤–∑—è–ª–∏—Å—è
        target_grid_x = grid_x - drag_block_col
        target_grid_y = grid_y - drag_block_row
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–æ–≤—É —Å–∏—Å—Ç–µ–º—É –≤—ñ–∑—É–∞–ª—å–Ω–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤ –∑ –∫–æ—Ä–∏–≥–æ–≤–∞–Ω–æ—é –ø–æ–∑–∏—Ü—ñ—î—é
        ui_effects.draw_enhanced_preview(screen, grid, dragged_piece, target_grid_x, target_grid_y)
    else:
        # –ó—É–ø–∏–Ω—è—î–º–æ –º–∏–≥–∞–Ω–Ω—è, –∫–æ–ª–∏ –Ω–µ –ø–µ—Ä–µ—Ç—è–≥—É—î–º–æ
        ui_effects.stop_blinking()

    # –ú–∞–ª—é—î–º–æ –ø—Ä–æ—Å—Ç—É –∫–æ—Ä–æ–±–∫—É –¥–ª—è —Ñ—ñ–≥—É—Ä
    ui_effects.draw_simple_piece_box(screen, piece_box)
    
    # –ú–∞–ª—é—î–º–æ —Ñ—ñ–≥—É—Ä–∏ –≤ –∫–æ—Ä–æ–±—Ü—ñ (–∫—Ä—ñ–º —Ç–æ—ó, —â–æ –ø–µ—Ä–µ—Ç—è–≥—É—î—Ç—å—Å—è)
    piece_box.draw(screen, dragged_piece_index if dragging else None)

    # –Ø–∫—â–æ –ø–µ—Ä–µ—Ç—è–≥—É—î–º–æ —Ñ—ñ–≥—É—Ä—É - –º–∞–ª—é—î–º–æ —ó—ó –ø—ñ–¥ –º–∏—à–µ—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–º—ñ—â–µ–Ω–Ω—è –∫–ª—ñ–∫—É
    if dragging and dragged_piece:
        mouse_x, mouse_y = pygame.mouse.get_pos()
        # –í—ñ–¥–Ω—ñ–º–∞—î–º–æ –∑–º—ñ—â–µ–Ω–Ω—è –∫–ª—ñ–∫—É, —â–æ–± —Ñ—ñ–≥—É—Ä–∞ –∑–∞–ª–∏—à–∞–ª–∞—Å—è –≤ —Ç–æ–º—É –∂ –º—ñ—Å—Ü—ñ –≤—ñ–¥–Ω–æ—Å–Ω–æ –∫—É—Ä—Å–æ—Ä–∞
        dragged_piece.draw(screen, mouse_x - drag_offset_x, mouse_y - drag_offset_y, PIECE_CELL_SIZE)


    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—ñ–Ω–µ—Ü—å –≥—Ä–∏
    if check_game_over():
        result = show_game_over_screen()
        if result == "restart":
            reset_game()
        elif result == "menu":
            # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –º–µ–Ω—é
            menu_system.main_menu_loop(records_manager, BACKGROUND_IMAGE)
            reset_game()
        elif result == "quit":
            running = False
    
    pygame.display.flip() # –û–Ω–æ–≤–ª—é—î–º–æ –µ–∫—Ä–∞–Ω
    clock.tick(60) # FPS –≤ –≥—Ä—ñ
pygame.quit()
exit()