import pygame
from sys import exit

# –Ü–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—ñ–≤ –≥—Ä–∏
from constants import *
import grid as grid_module
from piece import PieceBox
from ui import ui_effects, GameOverScreen, GameUI, MenuSystem
from records import records_manager

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Pygame
pygame.init()
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
clock = pygame.time.Clock()
pygame.display.set_caption("Drop Box")
pygame.display.set_icon(pygame.image.load("image/icon.png"))

# –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç–∏ UI
grid = grid_module.Grid()  # –Ü–≥—Ä–æ–≤–µ –ø–æ–ª–µ
game_over_screen = GameOverScreen(screen, clock)
game_ui = GameUI(screen)
menu_system = MenuSystem(screen, clock)

# –ü–æ–∫–∞–∑—É—î–º–æ –∑–∞—Å—Ç–∞–≤–∫—É —Ç–∞ –º–µ–Ω—é
menu_system.main_menu_loop(records_manager, get_background_image())


# –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª –≥—Ä–∏ (–∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è "–ì—Ä–∞—Ç–∏")
running = True
dragging = False
dragged_piece = None
dragged_piece_index = None  # –Ü–Ω–¥–µ–∫—Å —Ñ—ñ–≥—É—Ä–∏ –≤ –∫–æ—Ä–æ–±—Ü—ñ
drag_offset_x = 0  # –ó–º—ñ—â–µ–Ω–Ω—è –∫–ª—ñ–∫—É –ø–æ X –≤—ñ–¥–Ω–æ—Å–Ω–æ —Ñ—ñ–≥—É—Ä–∏
drag_offset_y = 0  # –ó–º—ñ—â–µ–Ω–Ω—è –∫–ª—ñ–∫—É –ø–æ Y –≤—ñ–¥–Ω–æ—Å–Ω–æ —Ñ—ñ–≥—É—Ä–∏
drag_block_col = 0  # –ö–æ–ª–æ–Ω–∫–∞ –±–ª–æ–∫—É –≤ —Ñ—ñ–≥—É—Ä—ñ, –∑–∞ —è–∫—É –≤–∑—è–ª–∏—Å—è
drag_block_row = 0  # –†—è–¥–æ–∫ –±–ª–æ–∫—É –≤ —Ñ—ñ–≥—É—Ä—ñ, –∑–∞ —è–∫—É –≤–∑—è–ª–∏—Å—è

# –ö–µ—à–æ–≤–∞–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
CACHED_GRID_HEIGHT = GRID_SIZE * GRID_CELL_SIZE
CACHED_CONTAINER_CENTER_Y = GRID_Y + (CACHED_GRID_HEIGHT - PIECE_CONTAINER_HEIGHT) // 2
CACHED_SCALE_FACTOR = PIECE_CELL_SIZE / PIECE_CONTAINER_CELL_SIZE

# –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è game over –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
game_over_check_counter = 0
GAME_OVER_CHECK_INTERVAL = 30  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω—ñ –ø—ñ–≤ —Å–µ–∫—É–Ω–¥–∏ –∑–∞–º—ñ—Å—Ç—å –∫–æ–∂–Ω–æ–≥–æ –∫–∞–¥—Ä—É


def create_piece_container(x_position):
    """–°—Ç–≤–æ—Ä—é—î –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ñ—ñ–≥—É—Ä –∑ –∫–µ—à–æ–≤–∞–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ (–æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è)"""
    return PieceBox(x_position, CACHED_CONTAINER_CENTER_Y)

def get_piece_at_mouse(mouse_pos):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∫–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ —Ñ—ñ–≥—É—Ä—É –≤ –∫–æ—Ä–æ–±—Ü—ñ"""
    return piece_box.get_piece_at_mouse(mouse_pos[0], mouse_pos[1])


# –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–æ–±–∫—É –¥–ª—è —Ñ—ñ–≥—É—Ä (—Ü–µ–Ω—Ç—Ä–æ–≤–∞–Ω–∞ –ø–æ –≤–∏—Å–æ—Ç—ñ —ñ–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è)
piece_box = create_piece_container(1000)

def show_game_over_screen():
    """–ü–æ–∫–∞–∑—É—î –µ–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≥—Ä–∏ –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏"""
    return game_over_screen.show(grid.score, records_manager)

def game_over():
    """–û–±—Ä–æ–±–ª—è—î –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≥—Ä–∏ —Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∫–æ—Ä–¥—É"""
    final_score = grid.score
    
    # –î–æ–¥–∞—î–º–æ —Ä–µ–∫–æ—Ä–¥
    is_new_record = records_manager.add_record(final_score)
    
    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –≥—Ä–∞–≤—Ü—è
    if is_new_record:
        print(f"üéâ –ù–û–í–ò–ô –†–ï–ö–û–†–î! –û—á–∫–∏: {final_score}")
        position = records_manager.get_player_position(final_score)
        if position:
            print(f"–í–∞—à–∞ –ø–æ–∑–∏—Ü—ñ—è: {position} –º—ñ—Å—Ü–µ")
    else:
        print(f"–ì—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—á–∫–∏: {final_score}")
        best_score = records_manager.get_best_score()
        print(f"–ù–∞–π–∫—Ä–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {best_score}")
    
    # –ü–æ–∫–∞–∑—É—î–º–æ —Ç–æ–ø-5 —Ä–µ–∫–æ—Ä–¥—ñ–≤
    print("\nüèÜ –¢–û–ü-5 –†–ï–ö–û–†–î–Ü–í:")
    top_records = records_manager.get_top_records(5)
    for i, record in enumerate(top_records, 1):
        print(f"{i}. {record['score']} –æ—á–æ–∫ - {record['player']} ({record['date']})")

def check_game_over():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –º–æ–∂–Ω–∞ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Ö–æ—á–∞ –± –æ–¥–Ω—É —Ñ—ñ–≥—É—Ä—É (–æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è)"""
    # –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è: –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É –∫—É—Ç–æ–≤—ñ –ø–æ–∑–∏—Ü—ñ—ó —è–∫ –Ω–∞–π–±—ñ–ª—å—à –π–º–æ–≤—ñ—Ä–Ω—ñ
    priority_positions = [(0,0), (0,7), (7,0), (7,7), (3,3), (3,4), (4,3), (4,4)]
    
    for piece in piece_box.pieces:
        # –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω—ñ –ø–æ–∑–∏—Ü—ñ—ó
        for row, col in priority_positions:
            if grid.can_place_piece(piece, col, row):
                return False
                
        # –Ø–∫—â–æ –≤ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–∏—Ö –º—ñ—Å—Ü—è—Ö –Ω–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ —ñ–Ω—à—ñ
        for row in range(8):
            for col in range(8):
                if (row, col) not in priority_positions:
                    if grid.can_place_piece(piece, col, row):
                        return False
    return True

def reset_game():
    """–°–∫–∏–¥–∞—î –≥—Ä—É –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É"""
    global grid, piece_box, dragging, dragged_piece, dragged_piece_index, drag_offset_x, drag_offset_y, drag_block_col, drag_block_row, game_over_check_counter
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —Å—ñ—Ç–∫—É
    grid = grid_module.Grid()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É –∫–æ—Ä–æ–±–∫—É –∑ —Ñ—ñ–≥—É—Ä–∞–º–∏ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è)
    piece_box = create_piece_container(1000)
    
    # –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
    dragging = False
    dragged_piece = None
    dragged_piece_index = None
    drag_offset_x = 0
    drag_offset_y = 0
    drag_block_col = 0
    drag_block_row = 0
    game_over_check_counter = 0

while running:
    # –ö–µ—à—É—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –º–∏—à—ñ –æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ –ø–æ—á–∞—Ç–∫—É –∫–∞–¥—Ä—É –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
    mouse_x, mouse_y = pygame.mouse.get_pos()
    mouse_pos = (mouse_x, mouse_y)
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            
        elif event.type == pygame.MOUSEBUTTONDOWN:
            # –ü–æ—á–∞—Ç–∏ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
            clicked_piece_index, offset_x, offset_y = get_piece_at_mouse(mouse_pos)
            if clicked_piece_index is not None:
                # –¢–∞–∫–æ–∂ –≤–∏–∑–Ω–∞—á–∞—î–º–æ, –∑–∞ —è–∫–∏–π –±–ª–æ–∫ —Ñ—ñ–≥—É—Ä–∏ –≤–∑—è–ª–∏—Å—è
                piece_index, block_col, block_row = piece_box.get_block_position_in_piece(mouse_pos[0], mouse_pos[1])
                
                # –ü–æ—á–∏–Ω–∞—î–º–æ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
                dragging = True
                dragged_piece = piece_box.pieces[clicked_piece_index]
                dragged_piece_index = clicked_piece_index
                drag_offset_x = offset_x
                drag_offset_y = offset_y
                drag_block_col = block_col if block_col is not None else 0
                drag_block_row = block_row if block_row is not None else 0
                
                # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ piece_box –ø—Ä–æ –ø–æ—á–∞—Ç–æ–∫ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
                piece_box.start_dragging(clicked_piece_index)
            
        elif event.type == pygame.MOUSEBUTTONUP:
            # –ó–∞–∫—ñ–Ω—á–∏—Ç–∏ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è
            if dragging and dragged_piece:
                grid_x, grid_y = grid.mouse_to_grid(mouse_x, mouse_y)
                
                # –ö–æ—Ä–µ–≥—É—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ç–æ–≥–æ, –∑–∞ —è–∫–∏–π –±–ª–æ–∫ —Ñ—ñ–≥—É—Ä–∏ –≤–∑—è–ª–∏—Å—è
                target_grid_x = grid_x - drag_block_col
                target_grid_y = grid_y - drag_block_row
                
                placed = False
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–æ–∂–Ω–∞ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Ñ—ñ–≥—É—Ä—É
                if grid.can_place_piece(dragged_piece, target_grid_x, target_grid_y):
                    # –†–æ–∑–º—ñ—â—É—î–º–æ —Ñ—ñ–≥—É—Ä—É –Ω–∞ —Å—ñ—Ç—Ü—ñ
                    grid.place_piece(dragged_piece, target_grid_x, target_grid_y)
                    grid.clear_lines()  # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—è –ª—ñ–Ω—ñ–π
                    placed = True
                else:
                    print("‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ —Ä–æ–∑–º—ñ—Å—Ç–∏—Ç–∏ —Ñ—ñ–≥—É—Ä—É —Ç—É—Ç")
                
                # –ó–∞–≤–µ—Ä—à—É—î–º–æ –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º (—Ü–µ –∑–∞–º—ñ–Ω–∏—Ç—å —Ñ—ñ–≥—É—Ä—É —è–∫—â–æ placed=True)
                piece_box.stop_dragging(placed)
            dragging = False
            dragged_piece = None
            dragged_piece_index = None
            drag_offset_x = 0
            drag_offset_y = 0
            drag_block_col = 0
            drag_block_row = 0
            
        elif event.type == pygame.MOUSEMOTION:
            if dragging:
                # –ü–æ–∑–∏—Ü—ñ—è –º–∏—à—ñ –≤–∂–µ –∫–µ—à–æ–≤–∞–Ω–∞ –Ω–∞ –ø–æ—á–∞—Ç–∫—É –∫–∞–¥—Ä—É
                pass
        
        elif event.type == pygame.KEYDOWN:
            # –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –Ω–∞–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
            if event.key == pygame.K_r:  # R - —Å–∫–∏–¥–∞–Ω–Ω—è —Å—ñ—Ç–∫–∏
                for row in range(8):
                    for col in range(8):
                        grid.cells[row][col] = None
                grid.score = 0
            elif event.key == pygame.K_n:  # N - –ù–æ–≤–∞ –≥—Ä–∞
                reset_game()
            
    # –∫–æ–¥ –≥—Ä–∏
    screen.fill(BACKGROUND_COLOR)
    grid.draw(screen)  # –º–∞–ª—é—î–º–æ —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ

    # –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ HUD (–æ—á–∫–∏ —Ç–∞ —Ä–µ–∫–æ—Ä–¥)
    best_score = records_manager.get_best_score()
    game_ui.draw_hud(grid.score, best_score)

    # –ü—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ—Ç—è–≥—É–≤–∞–Ω–Ω—è –∑ –Ω–æ–≤–∏–º–∏ –µ—Ñ–µ–∫—Ç–∞–º–∏
    if dragging and dragged_piece:
        grid_x, grid_y = grid.mouse_to_grid(mouse_x, mouse_y)
        
        # –ö–æ—Ä–µ–≥—É—î–º–æ –ø–æ–∑–∏—Ü—ñ—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ç–æ–≥–æ, –∑–∞ —è–∫–∏–π –±–ª–æ–∫ —Ñ—ñ–≥—É—Ä–∏ –≤–∑—è–ª–∏—Å—è
        target_grid_x = grid_x - drag_block_col
        target_grid_y = grid_y - drag_block_row
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–æ–≤—É —Å–∏—Å—Ç–µ–º—É –≤—ñ–∑—É–∞–ª—å–Ω–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤ –∑ –∫–æ—Ä–∏–≥–æ–≤–∞–Ω–æ—é –ø–æ–∑–∏—Ü—ñ—î—é
        ui_effects.draw_enhanced_preview(screen, grid, dragged_piece, target_grid_x, target_grid_y)
    else:
        # –ó—É–ø–∏–Ω—è—î–º–æ –º–∏–≥–∞–Ω–Ω—è, –∫–æ–ª–∏ –Ω–µ –ø–µ—Ä–µ—Ç—è–≥—É—î–º–æ
        ui_effects.stop_blinking()

    # –ú–∞–ª—é—î–º–æ –ø—Ä–æ—Å—Ç—É –∫–æ—Ä–æ–±–∫—É –¥–ª—è —Ñ—ñ–≥—É—Ä
    ui_effects.draw_simple_piece_box(screen, piece_box)
    
    # –ú–∞–ª—é—î–º–æ —Ñ—ñ–≥—É—Ä–∏ –≤ –∫–æ—Ä–æ–±—Ü—ñ (–∫—Ä—ñ–º —Ç–æ—ó, —â–æ –ø–µ—Ä–µ—Ç—è–≥—É—î—Ç—å—Å—è)
    piece_box.draw(screen)

    # –Ø–∫—â–æ –ø–µ—Ä–µ—Ç—è–≥—É—î–º–æ —Ñ—ñ–≥—É—Ä—É - –º–∞–ª—é—î–º–æ —ó—ó –ø—ñ–¥ –º–∏—à–µ—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–º—ñ—â–µ–Ω–Ω—è –∫–ª—ñ–∫—É
    if dragging and dragged_piece:
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω–∏–π scale_factor —Ç–∞ –ø–æ–∑–∏—Ü—ñ—é –º–∏—à—ñ –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
        scaled_offset_x = drag_offset_x * CACHED_SCALE_FACTOR
        scaled_offset_y = drag_offset_y * CACHED_SCALE_FACTOR
        
        # –í—ñ–¥–Ω—ñ–º–∞—î–º–æ —Å–∫–æ—Ä–µ–≥–æ–≤–∞–Ω–µ –∑–º—ñ—â–µ–Ω–Ω—è –∫–ª—ñ–∫—É
        dragged_piece.draw(screen, mouse_x - scaled_offset_x, mouse_y - scaled_offset_y, PIECE_CELL_SIZE)


    # –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫—ñ–Ω–µ—Ü—å –≥—Ä–∏ (–Ω–µ –∫–æ–∂–µ–Ω –∫–∞–¥—Ä)
    game_over_check_counter += 1
    if game_over_check_counter >= GAME_OVER_CHECK_INTERVAL:
        game_over_check_counter = 0
        if check_game_over():
            result = show_game_over_screen()
            if result == "restart":
                reset_game()
            elif result == "menu":
                # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –º–µ–Ω—é
                menu_system.main_menu_loop(records_manager, get_background_image())
                reset_game()
            elif result == "quit":
                running = False
    
    pygame.display.flip() # –û–Ω–æ–≤–ª—é—î–º–æ –µ–∫—Ä–∞–Ω
    clock.tick(60) # FPS –≤ –≥—Ä—ñ
pygame.quit()
exit()